
services:
  db:
    image: pgvector/pgvector:pg17
    container_name: postgres_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./config/postgres/postgresql.prod.conf:/etc/postgresql/postgresql.conf
      - ./config/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./logs/postgres:/var/log/postgresql
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    networks:
      - db_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '14g'

  pgbouncer:
    # CSA-1: We are now building a custom image to include pgbouncer.
    build:
      context: ./config/pgbouncer/build
    container_name: postgres_pgbouncer
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./config/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./config/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt:ro
      - ./logs/pgbouncer:/var/log/pgbouncer
    # SRE-1: Now that pgbouncer is installed, this command will work.
    command: pgbouncer /etc/pgbouncer/pgbouncer.ini
    ports:
      - "6432:6432"
    networks:
      - db_network

  exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: postgres_exporter
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - DATA_SOURCE_NAME=${DATA_SOURCE_NAME}
    ports:
      - "9187:9187"
    networks:
      - db_network

networks:
  db_network:
    driver: bridge